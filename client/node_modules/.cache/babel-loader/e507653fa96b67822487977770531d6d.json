{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');\n\nvar _regeneratorRuntime = require('@babel/runtime/regenerator');\n\nvar fetch = require('cross-fetch');\n\nvar PNG = require('@react-pdf/png-js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);\n\nvar _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);\n\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\n\nvar PNG__default = /*#__PURE__*/_interopDefaultLegacy(PNG);\n\nPNG__default[\"default\"].isValid = function (data) {\n  try {\n    return !!new PNG__default[\"default\"](data);\n  } catch (e) {\n    return false;\n  }\n}; // Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\n\nvar MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];\n\nvar JPEG = function JPEG(data) {\n  this.data = null;\n  this.width = null;\n  this.height = null;\n  this.data = data;\n\n  if (data.readUInt16BE(0) !== 0xffd8) {\n    throw new Error('SOI not found in JPEG');\n  }\n\n  var marker;\n  var pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    throw new Error('Invalid JPEG.');\n  }\n\n  pos += 3;\n  this.height = data.readUInt16BE(pos);\n  pos += 2;\n  this.width = data.readUInt16BE(pos);\n};\n\nJPEG.isValid = function (data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  var marker;\n  var pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar createCache = function createCache(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$limit = _ref.limit,\n      limit = _ref$limit === void 0 ? 100 : _ref$limit;\n\n  var cache = {};\n  var keys = [];\n  return {\n    get: function get(key) {\n      return cache[key];\n    },\n    set: function set(key, value) {\n      keys.push(key);\n\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n\n      cache[key] = value;\n    },\n    reset: function reset() {\n      cache = {};\n      keys = [];\n    },\n    length: function length() {\n      return keys.length;\n    }\n  };\n};\n\nvar IMAGE_CACHE = createCache({\n  limit: 30\n});\n\nvar fetchRemoteFile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(uri, options) {\n    var response, buffer;\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch__default[\"default\"](uri, options);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchRemoteFile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isValidFormat = function isValidFormat(format) {\n  var lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nvar guessFormat = function guessFormat(buffer) {\n  var format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG__default[\"default\"].isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nvar isCompatibleBase64 = function isCompatibleBase64(_ref2) {\n  var uri = _ref2.uri;\n  return /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n};\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n\n    case 'png':\n      return new PNG__default[\"default\"](body);\n\n    default:\n      return null;\n  }\n}\n\nvar resolveBase64Image = function resolveBase64Image(_ref3) {\n  var uri = _ref3.uri;\n  var match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  var format = match[1];\n  var data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(\"Base64 image invalid format: \" + format);\n  }\n\n  return new Promise(function (resolve) {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nvar resolveImageFromData = function resolveImageFromData(src) {\n  if (src.data && src.format) {\n    return new Promise(function (resolve) {\n      return resolve(getImage(src.data, src.format));\n    });\n  }\n\n  throw new Error(\"Invalid data given for local file: \" + JSON.stringify(src));\n};\n\nvar resolveBufferImage = function resolveBufferImage(buffer) {\n  var format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(function (resolve) {\n      return resolve(getImage(buffer, format));\n    });\n  }\n\n  return Promise.resolve();\n};\n\nvar getImageFormat = function getImageFormat(body) {\n  var isPng = body[0] === 137 && body[1] === 80 && body[2] === 78 && body[3] === 71 && body[4] === 13 && body[5] === 10 && body[6] === 26 && body[7] === 10;\n  var isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n  var extension = '';\n\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nvar resolveImageFromUrl = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee2(src) {\n    var uri, body, headers, _src$method, method, data, extension;\n\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uri = src.uri, body = src.body, headers = src.headers, _src$method = src.method, method = _src$method === void 0 ? 'GET' : _src$method;\n            {\n              _context2.next = 7;\n              break;\n            }\n\n          case 4:\n            _context2.t0 = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.next = 9;\n            return fetchRemoteFile(uri, {\n              body: body,\n              headers: headers,\n              method: method\n            });\n\n          case 9:\n            _context2.t0 = _context2.sent;\n\n          case 10:\n            data = _context2.t0;\n            extension = getImageFormat(data);\n            return _context2.abrupt(\"return\", getImage(data, extension));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function resolveImageFromUrl(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar resolveImage = function resolveImage(src, _temp) {\n  var _ref5 = _temp === void 0 ? {} : _temp,\n      _ref5$cache = _ref5.cache,\n      cache = _ref5$cache === void 0 ? true : _ref5$cache;\n\n  var cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  var image;\n\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexports[\"default\"] = resolveImage;","map":{"version":3,"mappings":"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","names":["PNG","isValid","data","e","MARKERS","JPEG","width","height","readUInt16BE","Error","marker","pos","length","includes","Buffer","isBuffer","createCache","limit","cache","keys","get","key","set","value","push","shift","reset","IMAGE_CACHE","fetchRemoteFile","uri","options","_context","fetch","response","buffer","arrayBuffer","constructor","name","from","isValidFormat","lower","format","toLowerCase","guessFormat","isCompatibleBase64","test","getImage","body","extension","resolveBase64Image","match","exec","Promise","resolve","resolveImageFromData","src","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","headers","_src$method","method","_context2","resolveImage","cacheKey","toString","image"],"sources":["../src/png.js","../src/jpeg.js","../src/cache.js","../src/resolve.js"],"sourcesContent":["import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n\n  width = null;\n\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = data => {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nconst getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        reject(new Error('Cannot fetch local file in this environemnt'));\n        return;\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        reject(new Error(`Cannot fetch non-local path: ${src}`));\n        return;\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n\n  return Promise.resolve();\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n"]},"metadata":{},"sourceType":"script"}