{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getFactors = _interopRequireDefault(require(\"./getFactors\"));\n\nvar _getDistances = _interopRequireDefault(require(\"./getDistances\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../../attributedString/advanceWidth\"));\n/* eslint-disable consistent-return */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\n\n/**\n * Adjust run positions by given distances\n *\n * @param {Array} distances\n * @param {Object} line\n * @returns {Object} line\n */\n\n\nvar justifyLine = function justifyLine(distances, line) {\n  var index = 0;\n\n  for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(line.runs), _step; !(_step = _iterator()).done;) {\n    var run = _step.value;\n\n    for (var _iterator2 = (0, _createForOfIteratorHelperLoose2.default)(run.positions), _step2; !(_step2 = _iterator2()).done;) {\n      var position = _step2.value;\n      position.xAdvance += distances[index++];\n    }\n  }\n\n  return line;\n};\n/**\n * A JustificationEngine is used by a Typesetter to perform line fragment\n * justification. This implementation is based on a description of Apple's\n * justification algorithm from a PDF in the Apple Font Tools package.\n *\n * //TODO: Make it immutable\n *\n * @param {Object} layout options\n * @param {Object} line\n * @returns {Object} line\n */\n\n\nvar justification = function justification(options, line) {\n  var gap = line.box.width - (0, _advanceWidth.default)(line);\n  if (gap === 0) return; // Exact fit\n\n  var factors = (0, _getFactors.default)(gap, line, options);\n  var distances = (0, _getDistances.default)(gap, factors);\n  return justifyLine(distances, line);\n};\n\nvar _default = R.curryN(2, justification);\n\nexports.default = _default;","map":{"version":3,"sources":["D:/GitHub/PxU/client/node_modules/@react-pdf/textkit/lib/engines/justification/index.js"],"names":["_interopRequireWildcard","require","default","_interopRequireDefault","exports","__esModule","_createForOfIteratorHelperLoose2","R","_getFactors","_getDistances","_advanceWidth","justifyLine","distances","line","index","_iterator","runs","_step","done","run","value","_iterator2","positions","_step2","position","xAdvance","justification","options","gap","box","width","factors","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEA,IAAIC,sBAAsB,GAAGF,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACF,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAII,gCAAgC,GAAGH,sBAAsB,CAACF,OAAO,CAAC,uDAAD,CAAR,CAA7D;;AAEA,IAAIM,CAAC,GAAGP,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIO,WAAW,GAAGL,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIQ,aAAa,GAAGN,sBAAsB,CAACF,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,IAAIS,aAAa,GAAGP,sBAAsB,CAACF,OAAO,CAAC,qCAAD,CAAR,CAA1C;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,WAAW,GAAG,SAASA,WAAT,CAAqBC,SAArB,EAAgCC,IAAhC,EAAsC;AACtD,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,SAAS,GAAG,CAAC,GAAGT,gCAAgC,CAACJ,OAArC,EAA8CW,IAAI,CAACG,IAAnD,CAAhB,EAA0EC,KAA/E,EAAsF,CAAC,CAACA,KAAK,GAAGF,SAAS,EAAlB,EAAsBG,IAA7G,GAAoH;AAClH,QAAIC,GAAG,GAAGF,KAAK,CAACG,KAAhB;;AAEA,SAAK,IAAIC,UAAU,GAAG,CAAC,GAAGf,gCAAgC,CAACJ,OAArC,EAA8CiB,GAAG,CAACG,SAAlD,CAAjB,EAA+EC,MAApF,EAA4F,CAAC,CAACA,MAAM,GAAGF,UAAU,EAApB,EAAwBH,IAArH,GAA4H;AAC1H,UAAIM,QAAQ,GAAGD,MAAM,CAACH,KAAtB;AACAI,MAAAA,QAAQ,CAACC,QAAT,IAAqBb,SAAS,CAACE,KAAK,EAAN,CAA9B;AACD;AACF;;AAED,SAAOD,IAAP;AACD,CAbD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIa,aAAa,GAAG,SAASA,aAAT,CAAuBC,OAAvB,EAAgCd,IAAhC,EAAsC;AACxD,MAAIe,GAAG,GAAGf,IAAI,CAACgB,GAAL,CAASC,KAAT,GAAiB,CAAC,GAAGpB,aAAa,CAACR,OAAlB,EAA2BW,IAA3B,CAA3B;AACA,MAAIe,GAAG,KAAK,CAAZ,EAAe,OAFyC,CAEjC;;AAEvB,MAAIG,OAAO,GAAG,CAAC,GAAGvB,WAAW,CAACN,OAAhB,EAAyB0B,GAAzB,EAA8Bf,IAA9B,EAAoCc,OAApC,CAAd;AACA,MAAIf,SAAS,GAAG,CAAC,GAAGH,aAAa,CAACP,OAAlB,EAA2B0B,GAA3B,EAAgCG,OAAhC,CAAhB;AACA,SAAOpB,WAAW,CAACC,SAAD,EAAYC,IAAZ,CAAlB;AACD,CAPD;;AASA,IAAImB,QAAQ,GAAGzB,CAAC,CAAC0B,MAAF,CAAS,CAAT,EAAYP,aAAZ,CAAf;;AAEAtB,OAAO,CAACF,OAAR,GAAkB8B,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getFactors = _interopRequireDefault(require(\"./getFactors\"));\n\nvar _getDistances = _interopRequireDefault(require(\"./getDistances\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../../attributedString/advanceWidth\"));\n\n/* eslint-disable consistent-return */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\n\n/**\n * Adjust run positions by given distances\n *\n * @param {Array} distances\n * @param {Object} line\n * @returns {Object} line\n */\nvar justifyLine = function justifyLine(distances, line) {\n  var index = 0;\n\n  for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(line.runs), _step; !(_step = _iterator()).done;) {\n    var run = _step.value;\n\n    for (var _iterator2 = (0, _createForOfIteratorHelperLoose2.default)(run.positions), _step2; !(_step2 = _iterator2()).done;) {\n      var position = _step2.value;\n      position.xAdvance += distances[index++];\n    }\n  }\n\n  return line;\n};\n/**\n * A JustificationEngine is used by a Typesetter to perform line fragment\n * justification. This implementation is based on a description of Apple's\n * justification algorithm from a PDF in the Apple Font Tools package.\n *\n * //TODO: Make it immutable\n *\n * @param {Object} layout options\n * @param {Object} line\n * @returns {Object} line\n */\n\n\nvar justification = function justification(options, line) {\n  var gap = line.box.width - (0, _advanceWidth.default)(line);\n  if (gap === 0) return; // Exact fit\n\n  var factors = (0, _getFactors.default)(gap, line, options);\n  var distances = (0, _getDistances.default)(gap, factors);\n  return justifyLine(distances, line);\n};\n\nvar _default = R.curryN(2, justification);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}